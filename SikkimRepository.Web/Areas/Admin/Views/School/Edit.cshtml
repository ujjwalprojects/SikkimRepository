@model SikkimRepository.Entities.CustomModels.MstSchoolManageModel
@{
    ViewBag.Title = "Edit School";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h1 class="h3 mb-2 text-gray-800">School</h1>
<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-info"><i class="fas fa-fw fa-hand-holding"></i> School <small class="text-secondary text-sm-left"><i class="fas fa-fw fa-caret-right"></i>Edit</small></h6>
    </div>
    <div class="card-body pb-4">
        @using (Html.BeginForm("Edit", "school", new { @area = "Admin" }, FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m=>m.School.SchoolID)
            <div class="col-md-12 mb-3">
                <i>Please note all fields marked as <strong class="text-danger">*</strong> are mandatory fields.</i>
            </div>
            <div class="col-md-12">
                <div class="form-group">
                    @Html.LabelFor(m => m.School.DistCode, new { @class = "control-label required" })
                    @Html.DropDownListFor(m => m.School.DistCode, new SelectList(Model.DistList, "DistCode", "DistName"), "-- Select District --", new { @class = "form-control", id = "ddDist" })
                    @Html.ValidationMessageFor(m => m.School.DistCode)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.School.BlockID, new { @class = "control-label required" })
                    @Html.DropDownListFor(m => m.School.BlockID, new SelectList(string.Empty), "-- Select Block --", new { @class = "form-control", id = "ddBlock" })
                    @Html.ValidationMessageFor(m => m.School.BlockID)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.School.UDISECode, new { @class = "control-label required" })
                    @Html.TextBoxFor(m => m.School.UDISECode, new { @class = "form-control", @autocomplete = "off", @placeholder = "Enter Udise Code" })
                    @Html.ValidationMessageFor(m => m.School.UDISECode)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.School.SchoolName, new { @class = "control-label required" })
                    @Html.TextBoxFor(m => m.School.SchoolName, new { @class = "form-control", @autocomplete = "off", @placeholder = "Enter School Name" })
                    @Html.ValidationMessageFor(m => m.School.SchoolName)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.School.SchoolAddress, new { @class = "control-label required" })
                    @Html.TextAreaFor(m => m.School.SchoolAddress, new { @class = "form-control", @autocomplete = "off", @placeholder = "Enter School Address" })
                    @Html.ValidationMessageFor(m => m.School.SchoolAddress)
                </div>
            </div>

            <div class="action-div action-style">
                <a href="/admin/School/index" class="btn btn-secondary btn-user">Back To List</a>
                <button type="submit" class="btn btn-primary btn-user float-right">Save</button>
                <div class="clearfix"></div>
            </div>
        }
    </div>

</div>
@*error message*@
<div id="ErrMsg" style="display:none;">
    <input type="hidden" id="ErrMsgHiddenField" name="ErrMsg" value="@TempData["ErrMsg"]" />
</div>
@section Scripts{
    <script type="text/javascript">
        window.onload = function () {
        if ($('#ddDist').val()!="")
        {
            $.ajax({
                type: 'GET',
                url: '@Url.Action("getblocks", "school", new { Area="Admin"})',
                data: { code: $('#ddDist').val() },
                datatype: 'json',
                success: function (data) {
                    $("#ddBlock").empty();
                    $("#ddBlock").append('<option value="">--- Select Block ---</option>');
                    $.each(data, function (i, item) {
                        $("#ddBlock").append('<option value="' + item.BlockID + '">' + item.BlockName + '</option>');
                    });

                    $('#ddBlock').val('@Model.School.BlockID');
                },
                error: function (ex) {
                    alert('Failed to retrieve data.' + ex);
                }
            })
        }
    }
        $('#ddDist').on('change', function () {
            var id = $('#ddDist').val();
        if (id == "") {
            $("#ddBlock").empty();
            $("#ddBlock").append('<option value="">--- Select Block ---</option>');
            $('#ddBlock').val("");
        }
        else {
            $.ajax({
                type: 'GET',
                url: '@Url.Action("getblocks", "school", new { Area="Admin"})',
                data: { code: id },
                datatype: 'json',
                success: function (data) {
                    $("#ddBlock").empty();
                    $("#ddBlock").append('<option value="">--- Select Block ---</option>');
                    $.each(data, function (i, item) {
                        $("#ddBlock").append('<option value="' + item.BlockID + '">' + item.BlockName + '</option>');
                    });

                    $('#ddBlock').val("");
                },
                error: function (ex) {
                    alert('Failed to retrieve data.' + ex);
                }
            })
        }
    })
    </script>
}


